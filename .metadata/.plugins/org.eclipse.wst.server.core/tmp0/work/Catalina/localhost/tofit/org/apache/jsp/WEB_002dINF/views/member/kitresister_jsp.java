/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-06-13 09:14:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class kitresister_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/KimSoYoung/tofit/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/tofit/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1683813509779L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

request.setCharacterEncoding("UTF-8");

      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/kitregister.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/reset.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/header.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/footer.css\">\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery-3.6.3.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/kitresister.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/index.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("        function sample6_execDaumPostcode() {\r\n");
      out.write("            new daum.Postcode({\r\n");
      out.write("                oncomplete: function(data) {\r\n");
      out.write("                    // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("    \r\n");
      out.write("                    // 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n");
      out.write("                    // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("                    var addr = ''; // 주소 변수\r\n");
      out.write("                    var extraAddr = ''; // 참고항목 변수\r\n");
      out.write("    \r\n");
      out.write("                    //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n");
      out.write("                    if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\r\n");
      out.write("                        addr = data.roadAddress;\r\n");
      out.write("                    } else { // 사용자가 지번 주소를 선택했을 경우(J)\r\n");
      out.write("                        addr = data.jibunAddress;\r\n");
      out.write("                    }\r\n");
      out.write("    \r\n");
      out.write("                    // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\r\n");
      out.write("                    if(data.userSelectedType === 'R'){\r\n");
      out.write("                        // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("                        // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("                        if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n");
      out.write("                            extraAddr += data.bname;\r\n");
      out.write("                        }\r\n");
      out.write("                        // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("                        if(data.buildingName !== '' && data.apartment === 'Y'){\r\n");
      out.write("                            extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("                        }\r\n");
      out.write("                        // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("                        if(extraAddr !== ''){\r\n");
      out.write("                            extraAddr = ' (' + extraAddr + ')';\r\n");
      out.write("                        }\r\n");
      out.write("                        // 조합된 참고항목을 해당 필드에 넣는다.\r\n");
      out.write("                    //     document.getElementById(\"sample6_extraAddress\").value = extraAddr;\r\n");
      out.write("                    \r\n");
      out.write("                    // } else {\r\n");
      out.write("                    //     document.getElementById(\"sample6_extraAddress\").value = '';\r\n");
      out.write("                     }\r\n");
      out.write("    \r\n");
      out.write("                    // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("                    document.getElementById('sample6_postcode').value = data.zonecode;\r\n");
      out.write("                    document.getElementById(\"sample6_address\").value = addr;\r\n");
      out.write("                    // 커서를 상세주소 필드로 이동한다.\r\n");
      out.write("                    document.getElementById(\"sample6_detailAddress\").focus();\r\n");
      out.write("                }\r\n");
      out.write("            }).open();\r\n");
      out.write("        }\r\n");
      out.write("        function addHypen(obj) {\r\n");
      out.write("    	    var number = obj.value.replace(/[^0-9]/g, \"\");\r\n");
      out.write("    	    var phone = \"\";\r\n");
      out.write("\r\n");
      out.write("    	    if(number.length < 4) {\r\n");
      out.write("    	        return number;\r\n");
      out.write("    	    } else if(number.length < 7) {\r\n");
      out.write("    	        phone += number.substr(0, 3);\r\n");
      out.write("    	        phone += \"-\";\r\n");
      out.write("    	        phone += number.substr(3);\r\n");
      out.write("    	    } else if(number.length < 11) {\r\n");
      out.write("    	        phone += number.substr(0, 3);\r\n");
      out.write("    	        phone += \"-\";\r\n");
      out.write("    	        phone += number.substr(3, 3);\r\n");
      out.write("    	        phone += \"-\";\r\n");
      out.write("    	        phone += number.substr(6);\r\n");
      out.write("    	    } else {\r\n");
      out.write("    	        phone += number.substr(0, 3);\r\n");
      out.write("    	        phone += \"-\";\r\n");
      out.write("    	        phone += number.substr(3, 4);\r\n");
      out.write("    	        phone += \"-\";\r\n");
      out.write("    	        phone += number.substr(7);\r\n");
      out.write("    	    }\r\n");
      out.write("    	    obj.value = phone;\r\n");
      out.write("    	}\r\n");
      out.write("    </script>\r\n");
      out.write("<title>TOFIT</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("	<div id=\"content\">\r\n");
      out.write("		<div class=\"content_inner\">\r\n");
      out.write("			<div class=\"main\">\r\n");
      out.write("				<h4>회원가입</h4>\r\n");
      out.write("				<div id=\"reg\">\r\n");
      out.write("					<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/addMember.do\" method=\"post\">\r\n");
      out.write("						<fieldset>\r\n");
      out.write("							<div>\r\n");
      out.write("								<input type=\"radio\" name=\"admin\" value=\"일반\"> 일반회원 <input\r\n");
      out.write("									type=\"radio\" name=\"admin\" value=\"코치\"> 코치회원\r\n");
      out.write("							</div>\r\n");
      out.write("							<div>\r\n");
      out.write("								<label for=\"id\"></label> <input type=\"text\" id=\"id\" name=\"id\"\r\n");
      out.write("									placeholder=\"사용할 아이디\">\r\n");
      out.write("							</div>\r\n");
      out.write("							<div>\r\n");
      out.write("								<label for=\"name\"></label> <input type=\"text\" id=\"name\"\r\n");
      out.write("									name=\"name\" placeholder=\"이름\" onchange=\"ck_name()\"> <span\r\n");
      out.write("									id=\"MsgName\" class=\"none\">유효성체크</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div>\r\n");
      out.write("								<label for=\"pwd\"></label> <input type=\"password\" id=\"pwd\"\r\n");
      out.write("									name=\"pwd\" placeholder=\"비밀번호\" onchange=\"ck_pwd()\"> <span\r\n");
      out.write("									id=\"MsgPw\" class=\"none\">유효성체크</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div>\r\n");
      out.write("								<label for=\"pwd_ck\"></label> <input type=\"password\" id=\"pwd_ck\"\r\n");
      out.write("									name=\"lastname\" placeholder=\"비밀번호 확인\" onchange=\"ck_pwd2()\">\r\n");
      out.write("								<span id=\"MsgPwck\" class=\"none\">유효성체크</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div>\r\n");
      out.write("								<label for=\"email\"></label> <input type=\"email\" id=\"email\"\r\n");
      out.write("									name=\"email\" placeholder=\"이메일 ( ex@codepen.com)\"\r\n");
      out.write("									onchange=\"ck_email()\"> <span id=\"MsgId\" class=\"none\">이메일</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div>\r\n");
      out.write("								<label for=\"nick\"></label> <input type=\"text\" id=\"nick\"\r\n");
      out.write("									name=\"nickName\" placeholder=\"닉네임\">\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"address\">\r\n");
      out.write("								<label for=\"bithdate\">주소</label> <input type=\"text\"\r\n");
      out.write("									id=\"sample6_postcode\" placeholder=\"우편번호\"> <input\r\n");
      out.write("									type=\"text\" id=\"sample6_address\" name=\"address\"\r\n");
      out.write("									placeholder=\"주소\"><br> <input type=\"text\"\r\n");
      out.write("									id=\"sample6_detailAddress\" placeholder=\"상세주소\"> <input\r\n");
      out.write("									type=\"button\" onclick=\"sample6_execDaumPostcode()\"\r\n");
      out.write("									value=\"우편번호 찾기\"><br>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div>\r\n");
      out.write("								<label for=\"phone\"></label> <input type=\"tel\" id=\"phone\"\r\n");
      out.write("									onchange=\"addHypen(this)\" name=\"phone\" placeholder=\"전화번호\">\r\n");
      out.write("							</div>\r\n");
      out.write("							<input type=\"submit\" value=\"회원가입\">\r\n");
      out.write("						</fieldset>\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/member/kitresister.jsp(7,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/member/kitresister.jsp(7,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/member/kitresister.jsp(7,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
